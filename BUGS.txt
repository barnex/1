known bugs
----------

[0001] SOLVED  arne:
 When retrieving the magnetization from the GPU, e.g., to save output, a CUDA error may occasionally be thrown. The CUDA error report says nothing about the cuda_memcpy() that originally caused it. E.g.: a CUFFT error: "the user passed an invalid plan pointer" may be thrown because the plan was (probably) corrupted by the memcpy(). The problem is not 100% reproducible and seems to depend on the exact timing. It can be worked around by saving output at slightly different times or even in a different order (e.g., first save a table and then a png file instead of vice-versa).

 Solution: runtime.LockOSThread(). Probably the go png encoder uses goroutines which causes the CUDA context be accessed by a thread that didn't create it.


[0002] OPEN arne:
 We can not handle big simulations yet:
 make3dconf(), cufft() fail and we allocate to much memory as well.

[0003] SOLVED arne:
 simulate crashes on empty input file (also when not really empty but no commands, only comments/whitespace) or on directory as input.

[0004] SOLVED arne:
 include command does not work when included files with relative path not in working dir (e.g. problematic with -daemon).
 also: load m state does not work with relative path.
 try: setWD

[0005] OPEN arne:
 no default solver type is set

[0006] OPEN arne:
 we should not crash on illegal input

[0007] OPEN arne:
 the simulation finishes immediately when no initial m is set (time step is infinite). should be illegal arg error.

[0008] OPEN arne:
 the simulation state gets re-initialized too often.

[0009] OPEN arne:
 crash reports are not redirected to output.log

[0010] OPEN arne:
 when no maxerror is specified, the time step is very small.

[0011] SOLVED arne:
 when more than one input file is specified the GPU gets initialized twice-> CUDA setGPU error
 -> Backend now stored gpuid, SetDevice() is safe even if gpuid already set.

[0012] SOLVED arne:
 png's are saved according to the left-hand-rule. the X,Y,Z axes lie very annoying (Z should be out-of-plane)
 -> Input is now always: largest("user X"), large("user Y"), small ("user Z"), png's stored accordingly

 [0013] OPEN arne:
.tensor format still saves in XYZ 
