.TH "gpuanal1.h" 3 "6 Jul 2010" "GPU_simulations" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gpuanal1.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'tensor.h'\fP
.br
\fC#include 'gpuconv1.h'\fP
.br
\fC#include 'gputil.h'\fP
.br
\fC#include <cufft.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBgpuanal1\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBgpuanal1\fP * \fBnew_gpuanal1\fP (int \fBN0\fP, int \fBN1\fP, int \fBN2\fP, \fBtensor\fP *kernel)"
.br
.ti -1c
.RI "void \fBgpuanal1_loadm\fP (\fBgpuanal1\fP *anal1, \fBtensor\fP *m)"
.br
.ti -1c
.RI "void \fBgpuanal1_storem\fP (\fBgpuanal1\fP *anal1, \fBtensor\fP *m)"
.br
.ti -1c
.RI "void \fBgpuanal1_step\fP (\fBgpuanal1\fP *solver, float dt, float alpha)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This file implements the forward semi-analytical time stepping scheme for solving the LL equation.
.PP
\fBAuthor:\fP
.RS 4
Ben Van de Wiele 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void gpuanal1_loadm (\fBgpuanal1\fP * anal1, \fBtensor\fP * m)"Copies a magnetization configuration in the solver, e.g. the initial magnetization. 
.PP
\fBSee also:\fP
.RS 4
: \fBgpuanal1_storem\fP 
.RE
.PP

.SS "void gpuanal1_step (\fBgpuanal1\fP * solver, float dt, float alpha)"Takes one time step \fBParameters:\fP
.RS 4
\fIsolver\fP the solver to step 
.br
\fIdt\fP time step (internal units). 
.br
\fIalpha\fP damping constant 
.RE
.PP

.SS "void gpuanal1_storem (\fBgpuanal1\fP * anal1, \fBtensor\fP * m)"Copies a magnetization configuration from the solver to the RAM, e.g. the magnetization after a number of time steps. 
.PP
\fBSee also:\fP
.RS 4
: \fBgpuanal1_loadm\fP 
.RE
.PP

.SS "\fBgpuanal1\fP* new_gpuanal1 (int N0, int N1, int N2, \fBtensor\fP * kernel)"Makes a new anal1 solver. \fBParameters:\fP
.RS 4
\fIN0\fP X-size of magnetization 
.br
\fIN1\fP Y-size of magnetization 
.br
\fIN2\fP Z-size of magnetization 
.br
\fIkernel\fP convolution kernel describing the effective field. size: 2*N0 x 2*N1 x 2*N2 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for GPU_simulations from the source code.
