.TH "gpuconv1" 3 "6 Jul 2010" "GPU_simulations" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gpuconv1 \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gpuconv1.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "int * \fBsize\fP"
.br
.RI "\fI3D size of the magnetization field \fP"
.ti -1c
.RI "int \fBN\fP"
.br
.RI "\fItotal number of magnetization vectors for linear access \fP"
.ti -1c
.RI "int * \fBpaddedSize\fP"
.br
.RI "\fI3D size of the zero-padded magnetization buffer \fP"
.ti -1c
.RI "int \fBpaddedN\fP"
.br
.RI "\fItotal number of magnetization vectors in the padded magnetization buffer, for linear access \fP"
.ti -1c
.RI "int * \fBpaddedComplexSize\fP"
.br
.RI "\fI3D size of the zero-padded magnetization buffer, in complex-number format \fP"
.ti -1c
.RI "int \fBpaddedComplexN\fP"
.br
.RI "\fItotal number of magnetization vectors in the padded magnetization buffer in complex-number format, for linear access \fP"
.ti -1c
.RI "int \fBlen_m\fP"
.br
.RI "\fItotal number of floats in the magnetization array \fP"
.ti -1c
.RI "float ** \fBm_comp\fP"
.br
.RI "\fIpointers to X, Y and Z components of magnetization, they will point into the m array passed to \fBgpuconv1_exec()\fP \fP"
.ti -1c
.RI "int \fBlen_m_comp\fP"
.br
.RI "\fItotal number of floats in each of the m_comp array (1/3 of len_m) \fP"
.ti -1c
.RI "float * \fBft_m_i\fP"
.br
.RI "\fIbuffer for one componet of m, zero-padded and in complex-format \fP"
.ti -1c
.RI "int \fBlen_ft_m_i\fP"
.br
.RI "\fItotal number of floats in ft_m_i \fP"
.ti -1c
.RI "float *** \fBft_kernel\fP"
.br
.RI "\fIft_kernel[s][d] gives the d-component of the field of a a unit vector along the s direction (in Fourier space). These components are themselves 3D fields of size paddedComplexSize. \fP"
.ti -1c
.RI "int \fBlen_ft_kernel\fP"
.br
.ti -1c
.RI "int \fBlen_ft_kernel_ij\fP"
.br
.ti -1c
.RI "int \fBlen_kernel_ij\fP"
.br
.ti -1c
.RI "int \fBlen_h\fP"
.br
.ti -1c
.RI "float ** \fBh_comp\fP"
.br
.RI "\fIpointers to X, Y and Z components of the magnetic field, they will point into the h array passed to \fBgpuconv1_exec()\fP \fP"
.ti -1c
.RI "int \fBlen_h_comp\fP"
.br
.ti -1c
.RI "float * \fBft_h\fP"
.br
.RI "\fIbuffer for the FFT'ed magnetic field \fP"
.ti -1c
.RI "int \fBlen_ft_h\fP"
.br
.ti -1c
.RI "float ** \fBft_h_comp\fP"
.br
.RI "\fIpoints to X, Y and Z components of ft_h \fP"
.ti -1c
.RI "int \fBlen_ft_h_comp\fP"
.br
.ti -1c
.RI "\fBgpuc2cplan\fP * \fBfftplan\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
A very simple and unoptimized convolution plan on the GPU 
.SH "Field Documentation"
.PP 
.SS "\fBgpuc2cplan\fP* \fBgpuconv1::fftplan\fP"
.SS "float* \fBgpuconv1::ft_h\fP"
.PP
buffer for the FFT'ed magnetic field 
.SS "float** \fBgpuconv1::ft_h_comp\fP"
.PP
points to X, Y and Z components of ft_h 
.SS "float*** \fBgpuconv1::ft_kernel\fP"
.PP
ft_kernel[s][d] gives the d-component of the field of a a unit vector along the s direction (in Fourier space). These components are themselves 3D fields of size paddedComplexSize. 
.SS "float* \fBgpuconv1::ft_m_i\fP"
.PP
buffer for one componet of m, zero-padded and in complex-format 
.SS "float** \fBgpuconv1::h_comp\fP"
.PP
pointers to X, Y and Z components of the magnetic field, they will point into the h array passed to \fBgpuconv1_exec()\fP \fBTodo\fP
.RS 4
should be removed as it gets only initialized after calling \fBgpuconv1_exec()\fP. This is confusing... 
.RE
.PP

.SS "int \fBgpuconv1::len_ft_h\fP"
.SS "int \fBgpuconv1::len_ft_h_comp\fP"
.SS "int \fBgpuconv1::len_ft_kernel\fP"
.SS "int \fBgpuconv1::len_ft_kernel_ij\fP"
.SS "int \fBgpuconv1::len_ft_m_i\fP"
.PP
total number of floats in ft_m_i 
.SS "int \fBgpuconv1::len_h\fP"
.SS "int \fBgpuconv1::len_h_comp\fP"
.SS "int \fBgpuconv1::len_kernel_ij\fP"
.SS "int \fBgpuconv1::len_m\fP"
.PP
total number of floats in the magnetization array 
.SS "int \fBgpuconv1::len_m_comp\fP"
.PP
total number of floats in each of the m_comp array (1/3 of len_m) 
.SS "float** \fBgpuconv1::m_comp\fP"
.PP
pointers to X, Y and Z components of magnetization, they will point into the m array passed to \fBgpuconv1_exec()\fP 
.SS "int \fBgpuconv1::N\fP"
.PP
total number of magnetization vectors for linear access 
.SS "int \fBgpuconv1::paddedComplexN\fP"
.PP
total number of magnetization vectors in the padded magnetization buffer in complex-number format, for linear access 
.SS "int* \fBgpuconv1::paddedComplexSize\fP"
.PP
3D size of the zero-padded magnetization buffer, in complex-number format 
.SS "int \fBgpuconv1::paddedN\fP"
.PP
total number of magnetization vectors in the padded magnetization buffer, for linear access 
.SS "int* \fBgpuconv1::paddedSize\fP"
.PP
3D size of the zero-padded magnetization buffer 
.SS "int* \fBgpuconv1::size\fP"
.PP
3D size of the magnetization field 

.SH "Author"
.PP 
Generated automatically by Doxygen for GPU_simulations from the source code.
