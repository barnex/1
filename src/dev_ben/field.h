/**
 * @file
 * A fieldplan knows how to calculate an effective field.
 * It stores all the parameters like anisotropy type etc internally
 * We can just call field_evaluation(fieldplan, m, h)
 * and it will store the field generated by m in h.
 *
 * @author Ben Van de Wiele,  Arne Vansteenkiste
 */
#ifndef FIELD_H
#define FIELD_H

#include "tensor.h"
#include "param.h"
// #include "gpuconv2.h"
#include "gpu_conv.h"
#include "cpu_exch.h"
#include "gpu_exchange.h"

#ifdef __cplusplus
extern "C" {
#endif

///@internal
typedef struct{

  param *params;
  conv_data *conv;
  
  
}fieldplan;


/**
 * Creates a new fieldplan
 */
fieldplan *new_fieldplan(param* params,     ///< parameters describe which contributions to take into account
                             conv_data* conv    ///< convolution data to evaluate the demag field (or anything else). NULL means we do not need a convolution (unlikely though)
                            );

                         
                         
/**
 *  Evaluates the field generated by m and stores it in h.
 */
void evaluate_field(fieldplan *plan, tensor *m, tensor *h);


#ifdef __cplusplus
}
#endif
#endif