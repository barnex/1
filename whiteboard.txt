Design proposal "the Unix way"

performance-critical parts:

* Grouped in libraries with a C interface. They may be written in any language, but this is hidden by a C wrapper if applicable.
* Functions do a heavy work, so the calling overhead is negligiable.
* Alternative implementions have a common interface. E.g.: fft.h covers fft-cuda.so, fft-cpu.so, ... The main program can be linked to any of the alternative implementations without source changes.
* Automated testing.
* Do not store state in globals, but via a (preferentially void) pointers passed to each function call.
* Naming suggestion: libfft.h, libfft-cuda.so, ...

main programs:

* Standalone programs that do a single well-defined task: e.g.: generate a staring configuration, calculate a kernel, run a simulation, process output.
* Use the high-performance C libraries for the heavy work
* Written in any language
* Common interface to be agreed upon: e.g.: command-line options, piping data, listening for text-based commands, ...
* Naming suggestions: micromag, atomag, micromech, microkernel, atomkernel, randserver, to_vtk, ...

complete suite:

* The standalone programs are glued together by a scripting languge like bash or python or just C ...
* Gluing suggestions:
  // via files:
  atomkernel --size 128 128 16 > kernel.txt;
  configuration --size 128 128 16 --type vortex 1 1 > initial.txt;
  micromag --kernel kernel.txt --config initial.txt;

  // via stdio:
  micromag --kernel 'atomkernel --size 129 128 16' --config 'cat config.txt'

* Common tensor format to be agreed upon. Suggestion: first byte indicates binary or text format. Then:
  Rank
  size0 size1 size2 ...
  data in C convention.
  The numbers are either 32-bit int/floats or ASCII text stored by whitespace, according to the format.

Cloud idea:

* Fileserver hosts input files. Cloud servers periodically look for input files, solve them when available an store the results back on the file server. Many cloud servers could be looking for input files in different network shares. My sever may solve my problems with 1st priority and your problems with 2nd priority. Your server does the reverse. Then we donate our idle time to each other.


version control:
* subversion?
* message board? google wave or just e-mail or ... 

hardware:

http://www.engadget.com/2010/01/28/evgas-w555-motherboard-gets-a-once-over-can-hold-seven-gpus/
